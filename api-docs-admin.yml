swagger: "2.0"
info:
  description: "RetroBits Admin API"
  version: "1.0.0"
  title: "RetroBits Admin API"
  contact:
    email: "karpov.dimon@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/api/admin"
schemes:
  - http

paths:

  /games:
    get:
      summary: fetch games
      description: Get Games with soring, filtering, paging, etc...
      parameters:
        - in: query
          description: "Filter Games by platform. Can accept values **zx**, **nes**, **snes**, **smd**. Example: `filter[platform]=zx`"
          name: filter[platform]
          type: string
          enum: [zx,nes,snes,smd]
        - in: query
          description: "Search Games by title. Example: `filter[title]=castlevania`"
          name: filter[title]
          type: string
        - in: query
          description: "Sort Games by something. Can accept **title** and **-title**. Example `sort=-title`"
          name: sort
          type: string
        - in: query
          description: "Set page size for paginator"
          name: page_size
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/GamesPaginated'
        422:
          description: The given data was invalid

    post:
      summary: create Game
      description: Add new Game
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: platform
          type: string
          description: platform slug
          required: true
        - in: formData
          name: title
          type: string
          required: true
        - in: formData
          name: description
          type: string
          required: true
        - in: formData
          name: rom
          type: file
        - in: formData
          name: images[]
          type: file
          description: game images
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Game'
        422:
          description: The given data was invalid

  /games/{id}:
    get:
      summary: show Game
      description: Show Game by ID
      parameters:
        - in: path
          name: id
          type: integer
          required: true
      responses:
        200:
          description: OK
        404:
          description: Not found

    put:
      summary: update Game
      description: Update Game data
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: id
          type: integer
          required: true
        - in: formData
          name: platform
          type: string
          description: platform slug
        - in: formData
          name: title
          type: string
        - in: formData
          name: description
          type: string
        - in: formData
          name: rom
          type: file
        - in: formData
          name: images[]
          type: file
          description: game images
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Game'
        422:
          description: The given data was invalid

    delete:
      summary: delete Game
      description: Delete Game by ID
      parameters:
        - in: path
          name: id
          type: integer
          required: true
      responses:
        204:
          description: OK

definitions:

  GamesPaginated:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Game'
      links:
        type: object
        properties:
          first:
            type: string
          last:
            type: string
          prev:
            type: string
          next:
            type: string
      meta:
        type: object
        properties:
          current_page:
            type: integer
          from:
            type: integer
          last_page:
            type: integer
          path:
            type: string
          per_page:
            type: integer
          to:
            type: integer
          total:
            type: integer

  Game:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
      description:
        type: string
      rom:
        type: string
      images:
        type: array
        items:
          $ref: '#/definitions/Image'
      platform:
        $ref: '#/definitions/Platform'

  Image:
    type: object
    properties:
      id:
        type: integer
      url:
        type: string

  Platform:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
      slug:
        type: string

  User:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string